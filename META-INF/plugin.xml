<idea-plugin version="2">
    <id>com.jivesoftware.robot.intellij.plugin</id>
    <name>Robot Plugin</name>
    <version>1.0.6</version>
    <vendor email="charles.capps@jivesoftware.com" url="http://www.jiveosftware.com">Jive Software</vendor>

    <description><![CDATA[
      Robot Framework Plugin to provide integration with Robot Test Case Files. Specifically focuses on providing integration with
      Robot keywords implemented in Java that are in the same IntelliJ project as your Robot test case files (can be in a different module).<br>
      Provides support for:
      <ul>
          <li>Syntax Highlighting</li>
          <li>Go to declaration of a Keyword from the point of use. Jumps to Java or Robot file keyword definition.</li>
          <li>Find usages of Keywords defined in Java or Robot files</li>
          <li>Autocomplete keywords and test case tags</li>
          <li>Find keywords by symbol name (ctrl+shift+alt+n) </li>
          <li>Create a Robot test case file from a template</li>
          <li>...and much more</li>
      </ul>
      <em>by Charles Capps</em>
    ]]></description>

    <change-notes><![CDATA[
    <h3>Version 1.0.6</h3>
    <ul>
    <li>Added templates so you can create a Robot Test Case File or Robot Keywords File from the New menu in the project explorer.</li>
    <li>Explicitly declaring dependencies on "lang" and "java" modules.</li>
    <li>Hoping above change will cause this plugin to be suggested when you open a Robot file and it says "Plugins supporting files with *.robot extension are found".</li>
    </ul>

    <h3>Version 1.0.5</h3>
    <ul>
	<li>Fixed a major bug that apparently was causing many features to not work for Mac, because Robot files were never indexed. In Ubuntu, I didn't notice any
            problems. The RobotKeywordUsagesProvider has to return a new WordsScanner each time getWordsScanner() is invoked, unless
            the given scanner is thread-safe.
        </li>
        <li>Yay, no more error messages in the event log!</li>
        <li>Added the .iml file to git, so it's easier to start working on the project.</li>
    </ul>
    <h3>Version 1.0.4</h3>
    <ul>
        <li>Fixed a bug where keywords defined within Robot would appear twice in autocomplete.</li>
    </ul>
    <h3>Version 1.0.3</h3>
    <ul>
        <li>You can find usages of Java-defined Robot Keywords. It will find all usages in Robot files + Java</li>
        <li>(Hopefully) fixed a bug where not all tokens were parsed in a Robot file by the words scanner for indexing.</li>
        <li>Added plugin JAR to the bin folder for easy download if you don't want to setup your environment for plugin development and compile it.</li>
    </ul>

    <h3>Version 1.0.2</h3>
    <ul>
        <li>You can find usages of Robot keywords defined in Robot files.</li>
        <li>Autocomplete works to suggest Robot keywords as you type---and it includes robot keywords from Java methods or Robot files</li>
        <li>Reworked how searching is done in RobotKeywordDefinitionFinder. Searches by the method name against the word index when possible.
          When not possible, searches by the term "RobotKeyword" in java files, since we're are only dealing with robot keywords defined in Java
          with the @RobotKeyword annotation.
        </li>
        <li>Autocomplete robot tags as well.</li>
    </ul>

    <h3>Version 1.0.1</h3>
    <ul>
        <li>Added ability to go to definition of a Robot keyword that's defined in Java or a robot file.</li>
        <li>Fixed some bugs in tokenizing. Robot keyword definitions are now parsed separately from robot keywords.</li>
        <li>Refactored to use a BNF file and generate the parser automatically. Trivial language at the moment, don't require much of a tree.</li>
        <li>Improved performance by only searching for java keywords in the current module. </li>
    </ul>

    ]]>
    </change-notes>

    <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Build+Number+Ranges for description -->
    <idea-version since-build="131"/>

    <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileTypeFactory implementation="com.jivesoftware.robot.intellij.plugin.lang.RobotFileTypeFactory"/>
        <syntaxHighlighter key="soy" implementationClass="com.jivesoftware.robot.intellij.plugin.lang.RobotSyntaxHighlighter"/>
        <colorSettingsPage implementation="com.jivesoftware.robot.intellij.plugin.lang.RobotColorsAndFontsPage"/>

        <lang.parserDefinition language="RobotTestFile" implementationClass="com.jivesoftware.robot.intellij.plugin.parser.RobotParserDefinition"/>
        <psi.referenceContributor implementation="com.jivesoftware.robot.intellij.plugin.elements.references.RobotKeywordReferenceContributor"/>
        <gotoSymbolContributor implementation="com.jivesoftware.robot.intellij.plugin.elements.symbols.RobotKeywordDefinitionSymbolContributor"/>
        <lang.commenter language="RobotTestFile" implementationClass="com.jivesoftware.robot.intellij.plugin.lang.RobotCommenter"/>

        <!-- This enables Find Usages of Robot Keywords defined in Robot -->
        <lang.findUsagesProvider language="RobotTestFile"
                                 implementationClass="com.jivesoftware.robot.intellij.plugin.elements.usages.RobotKeywordUsagesProvider"/>

        <!-- This enables Find Usages of a Java method that is a Robot Keyword definition -->
        <customUsageSearcher implementation="com.jivesoftware.robot.intellij.plugin.elements.usages.RobotCustomUsagesSearcher" />

        <!-- This doesn't do much yet, but will provide find usages highlighting, etc. -->
       <!-- <findUsagesHandlerFactory implementation="com.jivesoftware.robot.intellij.plugin.elements.usages.RobotFindUsagesHandlerFactory"/>-->

        <!-- Enables auto-completion of robot keywords -->
        <completion.contributor language="RobotTestFile"
                                implementationClass="com.jivesoftware.robot.intellij.plugin.elements.completion.RobotCompletionContributor"/>

        <internalFileTemplate name="fileTemplates.internal.RobotTestCaseFile"/>
        <internalFileTemplate name="fileTemplates.internal.RobotKeywordsFile"/>

    </extensions>

    <application-components>
        <!-- Add your application components here -->
    </application-components>

    <project-components>
        <!-- Add your project components here -->
    </project-components>

    <actions>
        <action id="RobotPlugin.NewFile" class="com.jivesoftware.robot.intellij.plugin.actions.NewRobotFileAction" text="Robot File"
                description="Create a new Robot File">
            <add-to-group group-id="NewXml" anchor="last"/>
        </action>

    </actions>

</idea-plugin>