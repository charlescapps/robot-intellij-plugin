
{
  parserClass="com.jivesoftware.robot.intellij.plugin.parser.RobotParser"
  parserUtilClass="com.jivesoftware.robot.intellij.plugin.parser.RobotParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Robot"
  psiImplClassSuffix="Impl"
  psiPackage="com.jivesoftware.robot.intellij.plugin.psi"
  psiImplPackage="com.jivesoftware.robot.intellij.plugin.psi.impl"

  elementTypeHolderClass="com.jivesoftware.robot.intellij.plugin.parser.RobotTypes"
  elementTypeClass="com.jivesoftware.robot.intellij.plugin.parser.RobotElementType"
  tokenTypeClass="com.jivesoftware.robot.intellij.plugin.lexer.RobotToken"

  psiImplUtilClass="com.jivesoftware.robot.intellij.plugin.elements.RobotImplUtil"
  implements("KEYWORD")="com.jivesoftware.robot.intellij.plugin.elements.references.RobotNamedElement"
  implements("KEYWORD_DEF")="com.jivesoftware.robot.intellij.plugin.elements.references.RobotNamedElement"
  implements("TEST_CASE")="com.jivesoftware.robot.intellij.plugin.elements.references.RobotNamedElement"
}

robotFile ::= !<<eof>> (ROBOT_TABLE|EMPTY_LINE)* { methods=[getNameIdentifier getPresentation]}

ROBOT_TABLE ::= (SETTINGS_TABLE|VARIABLES_TABLE|TEST_CASES_TABLE|KEYWORDS_TABLE)

/* Settings Table Grammar */
SETTINGS_TABLE ::= SETTINGS_TABLE_HEADING SETTINGS_LINE*

SETTINGS_TABLE_HEADING ::= SETTINGS_TABLE_HEADING_TOKEN END_OF_LINE (NEWLINE_TOKEN | <<eof>>)

SETTINGS_LINE ::= SETTING END_OF_LINE (NEWLINE_TOKEN | <<eof>>) | EMPTY_LINE

SETTING ::= FORCE_TAGS_SETTING | GENERIC_SETTING

FORCE_TAGS_SETTING ::= FORCE_TAGS_SETTING_KEYWORD_TOKEN (COLUMN_SEP_TOKEN TAG)*
GENERIC_SETTING ::= ROBOT_KEYWORD_TOKEN (COLUMN_SEP_TOKEN ROBOT_KEYWORD_ARG_TOKEN)*

/* Variables table */
VARIABLES_TABLE ::= VARIABLES_TABLE_HEADING VARIABLES_LINE*

VARIABLES_TABLE_HEADING ::= VARIABLES_TABLE_HEADING_TOKEN END_OF_LINE (NEWLINE_TOKEN | <<eof>>)

VARIABLES_LINE ::= (ASSIGNMENT_TOKEN | VARIABLE_TOKEN)  (COLUMN_SEP_TOKEN   ASSIGNABLE)? END_OF_LINE (NEWLINE_TOKEN | <<eof>>) |
                   (ARRAY_ASSIGNMENT_TOKEN | ARRAY_VARIABLE_TOKEN)  (COLUMN_SEP_TOKEN   ARRAY_ASSIGNABLE)? END_OF_LINE  (NEWLINE_TOKEN | <<eof>>) |
                   EMPTY_LINE

/* Test cases table */
TEST_CASES_TABLE ::= TEST_CASES_TABLE_HEADING EMPTY_LINE* TEST_CASE* { methods=[getNameIdentifier getPresentation]}

TEST_CASES_TABLE_HEADING ::= TEST_CASES_TABLE_HEADING_TOKEN END_OF_LINE (NEWLINE_TOKEN | <<eof>>)

TEST_CASE ::= TEST_CASE_HEADER TEST_CASE_SETTINGS TESTCASE_LINE+  { methods=[getName setName getNameIdentifier getPresentation]}

TEST_CASE_HEADER ::= TEST_CASE_HEADER_TOKEN END_OF_LINE (NEWLINE_TOKEN | <<eof>>)

TEST_CASE_SETTINGS ::= TEST_SETTING_LINE*

TEST_SETTING_LINE ::= COLUMN_SEP_TOKEN  TEST_SETTING END_OF_LINE (NEWLINE_TOKEN | <<eof>>) | EMPTY_LINE

TEST_SETTING ::= (DOCUMENTATION_SETTING|TAGS_SETTING|SETUP_SETTING|TEARDOWN_SETTING|TEMPLATE_SETTING|TIMEOUT_SETTING)

DOCUMENTATION_SETTING ::= DOCUMENTATION_SETTING_TOKEN  COLUMN_SEP_TOKEN  DOCUMENTATION_TOKEN?
TAGS_SETTING ::= TAGS_SETTING_TOKEN  (COLUMN_SEP_TOKEN TAG)*
SETUP_SETTING ::= SETUP_SETTING_TOKEN  COLUMN_SEP_TOKEN KEYWORD_INVOCATION
TEARDOWN_SETTING ::= TEARDOWN_SETTING_TOKEN COLUMN_SEP_TOKEN KEYWORD_INVOCATION
TEMPLATE_SETTING ::= TEMPLATE_SETTING_TOKEN COLUMN_SEP_TOKEN ROBOT_KEYWORD_TOKEN
TIMEOUT_SETTING ::= TIMEOUT_SETTING_TOKEN COLUMN_SEP_TOKEN TIMEOUT_VALUE_TOKEN

TESTCASE_LINE ::= COLUMN_SEP_TOKEN (KEYWORD_INVOCATION | VARIABLE_ASSIGN_TO_KEYWORD) END_OF_LINE (NEWLINE_TOKEN | <<eof>>) |
                  COLUMN_SEP_TOKEN ARGUMENT_LIST |
                  EMPTY_LINE

/* Keywords table */
KEYWORDS_TABLE ::= KEYWORDS_TABLE_HEADING (EMPTY_LINE | KEYWORD_DEFINITION)* { methods=[getNameIdentifier getPresentation]}

KEYWORDS_TABLE_HEADING ::= KEYWORDS_TABLE_HEADING_TOKEN END_OF_LINE (NEWLINE_TOKEN | <<eof>>)

KEYWORD_DEFINITION ::= KEYWORD_DEFINITION_HEADER KEYWORD_SETTINGS KEYWORD_LINE* RETURN_LINE?

KEYWORD_DEFINITION_HEADER ::= KEYWORD_DEF END_OF_LINE (NEWLINE_TOKEN | <<eof>>)

KEYWORD_SETTINGS ::= KEYWORD_SETTING_LINE*
KEYWORD_SETTING_LINE ::= COLUMN_SEP_TOKEN KEYWORD_SETTING END_OF_LINE (NEWLINE_TOKEN | <<eof>>) | EMPTY_LINE
KEYWORD_SETTING ::= ARGUMENTS_SETTING | DOCUMENTATION_SETTING | TEARDOWN_SETTING | TIMEOUT_SETTING

ARGUMENTS_SETTING ::= ARGUMENTS_SETTING_TOKEN (COLUMN_SEP_TOKEN ARGUMENT_DEF)*
ARGUMENT_DEF ::= VARIABLE_TOKEN | ASSIGNMENT_TOKEN WHITESPACE_TOKEN? KEYWORD_ARG

KEYWORD_LINE ::= COLUMN_SEP_TOKEN ( KEYWORD_INVOCATION | VARIABLE_ASSIGN_TO_KEYWORD ) END_OF_LINE (NEWLINE_TOKEN | <<eof>>)  | EMPTY_LINE

RETURN_LINE ::= COLUMN_SEP_TOKEN RETURN_SETTING END_OF_LINE (NEWLINE_TOKEN | <<eof>>)
RETURN_SETTING ::= RETURN_SETTING_TOKEN (COLUMN_SEP_TOKEN KEYWORD_ARG)+


/* Shared grammar */
VARIABLE ::= VARIABLE_TOKEN | ARRAY_VARIABLE_TOKEN
ARGUMENT_LIST ::= KEYWORD_ARG (COLUMN_SEP_TOKEN KEYWORD_ARG)*
ASSIGNMENT ::= ASSIGNMENT_TOKEN | ARRAY_ASSIGNMENT_TOKEN
KEYWORD_INVOCATION ::= KEYWORD (COLUMN_SEP_TOKEN KEYWORD_ARG)*
ASSIGNABLE ::= KEYWORD_INVOCATION | KEYWORD_ARG
ARRAY_ASSIGNABLE ::= KEYWORD_INVOCATION | KEYWORD_ARG (COLUMN_SEP_TOKEN KEYWORD_ARG)*
VARIABLE_ASSIGN_TO_KEYWORD ::= ( MULTI_ASSIGNMENT | SINGLE_ASSIGNMENT ) COLUMN_SEP_TOKEN  KEYWORD_INVOCATION
SINGLE_ASSIGNMENT ::= VARIABLE | ASSIGNMENT
MULTI_ASSIGNMENT ::=  VARIABLE  (COLUMN_SEP_TOKEN  VARIABLE)*  COLUMN_SEP_TOKEN  (ASSIGNMENT | VARIABLE)
KEYWORD_ARG ::= VARIABLE | ROBOT_KEYWORD_ARG_TOKEN
TAG ::= TAG_TOKEN
END_OF_LINE ::= WHITESPACE_TOKEN? COLUMN_SEP_TOKEN? COMMENT_TOKEN?
EMPTY_LINE  ::= !<<eof>> END_OF_LINE (NEWLINE_TOKEN | <<eof>>)

KEYWORD ::= ROBOT_KEYWORD_TOKEN { methods=[getName setName getNameIdentifier getReference getReferences handleElementRename]}

KEYWORD_DEF ::= ROBOT_KEYWORD_DEF_TOKEN { methods=[getName setName getNameIdentifier getPresentation]}

ERROR ::= BAD_SYNTAX_TOKEN

OTHER ::= WHITESPACE_TOKEN | COLUMN_SEP_TOKEN | SINGLE_SPACE_TOKEN

COMMENT ::= COMMENT_TOKEN